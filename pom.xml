<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.netease.cloudqa</groupId>
	<artifactId>nlb-api-test</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<description>nlb api test code</description>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.encoding>UTF-8</maven.compiler.encoding>
		<java-version>1.8</java-version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<org.springframework.version>3.1.0.RELEASE</org.springframework.version>
		<org.springframework.security.version>3.1.0.RELEASE</org.springframework.security.version>
		<spring.integration.version>2.0.5.RELEASE</spring.integration.version>
		<jetty.version>8.1.5.v20120716</jetty.version>
		<jetty.jsp.version>8.1.4.v20120524</jetty.jsp.version>
  		<!--<xml.file>${xml.file}</xml.file>-->
	</properties>
	<repositories>
		<repository>
			<id>netease</id>
			<name>netease</name>
			<url>http://mvn.hz.netease.com/artifactory/repo</url>
		</repository>
	</repositories>
	
	<dependencies>
		<!--<dependency>-->
			<!--<groupId>org.apache.httpcomponents</groupId>-->
			<!--<artifactId>httpclient</artifactId>-->
			<!--<version>4.2.2</version>-->
		<!--</dependency>-->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.5.1</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
		</dependency>
		<!-- sdk jar dependency-->
		<dependency>
			<groupId>com.netease.cloud</groupId>
      		<artifactId>nos-sdk-java</artifactId>
      		<version>1.2.6</version>
		</dependency>
		<dependency>
			<groupId>com.netease</groupId>
			<artifactId>push-common</artifactId>
			<version>1.2.0</version>
		</dependency>
		<dependency>
			<groupId>com.netease</groupId>
      		<artifactId>push-server-sdk</artifactId>
      		<version>3.0.0</version>
		</dependency>
		<dependency>
	    	<groupId>commons-lang</groupId>
	   	 	<artifactId>commons-lang</artifactId>
	    	<version>2.6</version>
		</dependency>
		
	  <dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.9</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit-dep</artifactId>
			<version>4.9</version>
			<scope>test</scope>
		</dependency>

		<!-- log -->
		<!--<dependency>-->
		  <!--<groupId>org.slf4j</groupId>-->
		  <!--<artifactId>slf4j-api</artifactId>-->
		  <!--<version>1.7.10</version>-->
		<!--</dependency>-->
		<dependency>
		  <groupId>ch.qos.logback</groupId>
		  <artifactId>logback-classic</artifactId>
		  <version>1.1.2</version>
		</dependency>
		<dependency>
		  <groupId>ch.qos.logback</groupId>
		  <artifactId>logback-core</artifactId>
		  <version>1.1.2</version>
		</dependency>

		<!-- Jackson JSON -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.4</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
		<dependency>
		    <groupId>org.apache.httpcomponents</groupId>
		    <artifactId>httpclient</artifactId>
		    <version>4.3.3</version>
		</dependency>
		<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpcore</artifactId>
				<version>4.3.3</version>
		</dependency>
		<dependency>
		    <groupId>commons-logging</groupId>
		    <artifactId>commons-logging</artifactId>
		    <version>1.1.1</version>
		</dependency>



		<!-- Core utilities used by other modules. Define this if you use Spring 
			Utility APIs (org.springframework.core.*/org.springframework.util.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>


		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-asm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>


		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Bean Factory and JavaBeans utilities (depends on spring-core) Define 
			this if you use Spring Bean APIs (org.springframework.beans.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core, 
			spring-beans) Define this if you use Spring AOP APIs (org.springframework.aop.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Application Context (depends on spring-core, spring-expression, spring-aop, 
			spring-beans) This is the central artifact for Spring's Dependency Injection 
			Container and is generally always defined -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Various Application Context utilities, including EhCache, JavaMail, 
			Quartz, and Freemarker integration Define this if you need any of these integrations -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Transaction Management Abstraction (depends on spring-core, spring-beans, 
			spring-aop, spring-context) Define this if you use Spring Transactions or 
			DAO Exception Hierarchy (org.springframework.transaction.*/org.springframework.dao.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, 
			spring-tx) Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, 
			and iBatis. (depends on spring-core, spring-beans, spring-context, spring-tx) 
			Define this if you need ORM (org.springframework.orm.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB, 
			JiBX, Castor, XStream, and XML Beans. (depends on spring-core, spring-beans, 
			spring-context) Define this if you need OXM (org.springframework.oxm.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Web application development utilities applicable to both Servlet and 
			Portlet Environments (depends on spring-core, spring-beans, spring-context) 
			Define this if you use Spring MVC, or wish to use Struts, JSF, or another 
			web framework with Spring (org.springframework.web.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Spring MVC for Servlet Environments (depends on spring-core, spring-beans, 
			spring-context, spring-web) Define this if you use Spring MVC with a Servlet 
			Container such as Apache Tomcat (org.springframework.web.servlet.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>


		<!-- Support for testing Spring applications with tools such as JUnit and 
			TestNG This artifact is generally always defined with a 'test' scope for 
			the integration testing framework and unit testing stubs -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework.version}</version>
			<scope>test</scope>
		</dependency>



		<!-- JETTY DEPENDENCIES -->
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
			<version>${jetty.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlet</artifactId>
			<version>${jetty.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-webapp</artifactId>
			<version>${jetty.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlets</artifactId>
			<version>${jetty.version}</version>
		</dependency>

		<!-- JSP and JSTL SUPPORT -->
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-jsp</artifactId>
			<version>${jetty.jsp.version}</version>
		</dependency>

		<!-- mybatis -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>3.2.2</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>1.2.0</version>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>
		
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.0.8</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.jyaml/jyaml 
		<dependency>
		    <groupId>org.jyaml</groupId>
		    <artifactId>jyaml</artifactId>
		    <version>1.3</version>
		</dependency>
		-->

		<!-- https://mvnrepository.com/artifact/org.yaml/snakeyaml -->
		<dependency>
		    <groupId>org.yaml</groupId>
		    <artifactId>snakeyaml</artifactId>
		    <version>1.18</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/commons-beanutils/commons-beanutils -->
		<dependency>
		    <groupId>commons-beanutils</groupId>
		    <artifactId>commons-beanutils</artifactId>
		    <version>1.7.0</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.alibaba/fastjson -->
		<dependency>
		    <groupId>com.alibaba</groupId>
		    <artifactId>fastjson</artifactId>
		    <version>1.2.34</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.mousio/etcd4j -->
		<dependency>
		    <groupId>org.mousio</groupId>
		    <artifactId>etcd4j</artifactId>
		    <version>2.7.0</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core -->
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-core</artifactId>
		    <version>2.5.4</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/io.netty/netty-codec-http -->
		<dependency>
		    <groupId>io.netty</groupId>
		    <artifactId>netty-codec-http</artifactId>
		    <version>4.1.13.Final</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/io.netty/netty-handler -->
		<dependency>
		    <groupId>io.netty</groupId>
		    <artifactId>netty-handler</artifactId>
		    <version>4.1.13.Final</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
		<!--<dependency>-->
		    <!--<groupId>org.slf4j</groupId>-->
		    <!--<artifactId>slf4j-api</artifactId>-->
		    <!--<version>1.7.12</version>-->
		<!--</dependency>-->

		<!-- https://mvnrepository.com/artifact/junit/junit
		<dependency>
		    <groupId>junit</groupId>
		    <artifactId>junit</artifactId>
		    <version>4.12</version>
		    <scope>test</scope>
		</dependency>
		 -->
		
		<!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-simple -->
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>slf4j-simple</artifactId>
		    <version>1.7.12</version>
		    <scope>test</scope>
		</dependency>

		<dependency>
			<groupId>signature</groupId>
			<artifactId>signature</artifactId>
			<version>1.0-SNAPSHOT</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
           	</exclusions>
    	</dependency>
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations-java5</artifactId>
            <version>RELEASE</version>
            <scope>compile</scope>
        </dependency>

        <!--<dependency>-->
			<!--<groupId>signature</groupId>-->
			<!--<artifactId>signature</artifactId>-->
			<!--<version>1.0-SNAPSHOT</version>-->
			<!--<exclusions>-->
				<!--<exclusion>-->
					<!--<groupId>log4j</groupId>-->
					<!--<artifactId>log4j</artifactId>-->
				<!--</exclusion>-->
			<!--</exclusions>-->
		<!--</dependency>-->

	</dependencies>
	<build>
		<sourceDirectory>src/test/java</sourceDirectory>
		<resources>
			<resource>
				<directory>src/test/resources</directory>
				<targetPath>${project.build.directory}</targetPath>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.18.1</version>
				<configuration>
					<testFailureIgnore>true</testFailureIgnore>
					<argLine>-Xms512m -Xmx1024m</argLine>
					<argLine>-Dfile.encoding=UTF-8</argLine>
					<suiteXmlFiles>
						<suiteXmlFile>src/test/resources/xml/${xml.file}-test.xml</suiteXmlFile>
					</suiteXmlFiles>
					<systemPropertyVariables>
						<testEnvironment>{test.env}</testEnvironment>
					</systemPropertyVariables>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<transformers>
						<transformer
								implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
							<mainClass>org.testng.TestNG</mainClass>
						</transformer>
					</transformers>
				</configuration>
				<executions>
					<execution>
						<id>package_shade_profile</id>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!--<plugin>-->
				<!--<artifactId>maven-eclipse-plugin</artifactId>-->
				<!--<version>2.9</version>-->
				<!--<configuration>-->
					<!--<additionalProjectnatures>-->
						<!--<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>-->
					<!--</additionalProjectnatures>-->
					<!--<additionalBuildcommands>-->
						<!--<buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>-->
					<!--</additionalBuildcommands>-->
					<!--<downloadSources>true</downloadSources>-->
					<!--<downloadJavadocs>true</downloadJavadocs>-->
				<!--</configuration>-->
			<!--</plugin>-->
			<plugin>
  		<artifactId>maven-compiler-plugin</artifactId>
                <version>2.0.2</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
   <!--			<plugin>-->
			<!--	<groupId>org.apache.maven.plugins</groupId>-->
			<!--	<artifactId>maven-compiler-plugin</artifactId>-->
			<!--	<version>3.3</version>-->
			<!--</plugin>-->
		</plugins>
	</build>
</project>